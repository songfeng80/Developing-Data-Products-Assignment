library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(manipulate)
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rCharts)
install.packages(rCharts)
install.packages('rCharts')
library(rCharts)
require(rCharts)
require(devtools)
require(devtools)
require(devtools)
activ<-read.csv("C:/DS/activity.csv)
()
tete
""
activ<-read.csv("C:/DS/activity.csv")
activ<-read.csv("C:/DS/activity.csv")
head(activ)
attach(activ)
aggregate(steps, by=list(date), FUN=mean)
aggregate(na.omit(steps), by=list(date), FUN=mean)
activ<-na.omit(activ)
head(activ)
attach(activ)
aggregate(steps, by=list(date), FUN=mean)
tot<-aggregate(steps, by=list(date), FUN=sum)
hist(tot[,2])
hist(tot[,2], main="total number of steps taken each day", ncol=10)
hist(tot[,2], main="total number of steps taken each day", breaks=10)
avg<-aggregate(steps, by=list(interval), FUN=mean)
plot(avg, type='l')
plot(avg, type='l', xlab='intervels',ylab='', main="average number of steps taken")
which.max(avg)
head(avg)
which.max(avg[,2])
avg[which.max(avg[,2]),]
activ<-read.csv("C:/DS/activity.csv")
summary(activ)
names(avg)=c("interval","meanstep")
avg[which.max(avg[,2]),]
dim(avg)
dim(activ)
activ2<-activ(steps=="NA")
activ2<-activ[steps=="NA"]
dim(activ2)
activ2<-activ[steps=="NA",]
dim(activ2)
activ2<-subset(activ,steps==NA)
dim(activ2)
activ2<-activ[activ$steps==NA,]
dim(activ2)
head(activ2)
activ<-read.csv("C:/DS/activity.csv")
activ2<-activ[activ$steps==NA,]
head(activ2)
head(activ)
activ2<-activ[is.na(activ$steps),]
head(activ)
head(activ2)
dim(activ2)
activ3<- merge(activ2,avg, by="interval")
dim(activ3)
head(activ3)
names(avg)=c("interval","steps")
activ3< merge(activ2,avg, by="interval")[,c(4,3,1)]
activ3<activ3[,c(4,3,1)]
activ3<-activ3[,c(4,3,1)]
head(activ3)
names(activ3[,1])="steps"
head(activ3)
activ4<-merge(activ,activ3,by=c("date",interval") )
7676
frewgf
&
CADadv
""
activ4<-merge(activ,activ3,by=c("date","interval") )
activ4<-merge(activ,activ3,by=c("date","interval"), all.x = all)
activ4<-merge(activ,activ3,by=c("date","interval"), all.x =T)
head(activ4)
names(activ3[,1])="steps"
head(activ3)
names(activ3)=c("steps", "date", "interval")
head(activ3)
activ4<-merge(activ,activ3,by=c("date","interval"), all.x =T)
head(activ4)
activ2< merge(activ,avg, by="interval")
activ2< merge(activ,avg, by="interval",all.x =T)
activ2< merge(activ,avg, by="interval",all.x =T)
dim(avg)
dim(activ)
head(av)
head(avg)
activ2< merge(activ,avg, by="interval")
activ2<-activ[is.na(activ$steps),]
#activ2< merge(activ,avg, by="interval",all.x =T)
activ3<-activ3[,c(4,3,1)]
activ4<-merge(activ,activ3,by=c("date","interval"), all.x =T)
activ3< merge(activ,avg, by="interval")
activ3<-activ3[,c(4,3,1)]
activ3< merge(activ2,avg, by="interval")
activ2< merge(activ,avg, by="interval")
head(avg)
activ<-read.csv("C:/DS/activity.csv")
summary(activ)
dim(avg)
dim(activ)
activ2< merge(activ,avg, by="interval")
activ2<- merge(activ,avg, by="interval")
head(activ2)
dim(activ2)
activ2[activ2$steps.x==NA,2]<-activ2$steps.y
tail(activ3)
tail(activ2)
activ2[activ2$steps.x==NA,2]=activ2$steps.y
for i in dim(activ2)[1] {}
if is.na(activ2$steps.x)  activ2$steps.x=activ2$steps.y
}
for i in 1:dim(activ2)[1] {}
if is.na(activ2$steps.x)  activ2$steps.x=activ2$steps.y
}
for (i in 1:dim(activ2)[1]) {
if is.na(activ2$steps.x)  activ2$steps.x=activ2$steps.y
}
for (i in 1:dim(activ2)[1]) {
if is.na(activ2$steps.x)  {activ2$steps.x=activ2$steps.y}
for (i in 1:dim(activ2)[1]) {
if (is.na(activ2$steps.x))  activ2$steps.x=activ2$steps.y
)
for (i in 1:dim(activ2)[1]) {
if (is.na(activ2$steps.x))  activ2$steps.x=activ2$steps.y
}
warnings()
head(activ2)
tot2<-aggregate(steps, by=list(date), FUN=sum, data=activ2)
tot2<-aggregate(activ2$steps, by=list(activ2$date), FUN=sum)
summary(activ2)
tot2<-aggregate(activ2$steps.x, by=list(activ2$date), FUN=sum)
hist(tot2[,2], main="total number of steps taken each day", breaks=10)
mean(tot2[,2])
median(tot2[,2])
mean(tot[,2])
head(activ)
head(activ2)
tail(activ2)
hist(tot[,2], main="total number of steps taken each day", breaks=10)
head(tot2)
tail(tot2)
activ2<- merge(activ,avg, by="interval",all.x=T)
head(activ2)
for (i in 1:dim(activ2)[1]) {
if (is.na(activ2$steps.x))  activ2$steps.x=activ2$steps.y
}
warnings()
for (i in 1:dim(activ2)[1]) {
if (is.na(activ2$steps.x[i]))  activ2$steps.x[i]=activ2$steps.y[i]
}
tot2<-aggregate(activ2$steps.x, by=list(activ2$date), FUN=sum)
hist(tot2[,2], main="total number of steps taken each day", breaks=10)
mean(tot2[,2])
median(tot2[,2])
head(activ2)
tail(activ2)
head(tot2)
activ2[1000:1100]
activ2[1000:1100,]
head(activ2[order(date,interval)])
head(activ2[order(activ2$date,activ2$interval)])
head(activ2[order(activ2$date,activ2$interval),])
activ2<-activ2[order(activ2$date,activ2$interval),]
activ[1154:1441,]
activ2[1154:1441,]
activ2<- merge(activ,avg, by="interval",all.x=T)
activ2<-activ2[order(activ2$date,activ2$interval),]
activ2[1154:1441,]
head(activ2)
for (i in 1:dim(activ2)[1]) {
if (is.na(activ2$steps.x[i]))  activ2$steps.x[i]=activ2$steps.y[i]
}
activ2<-activ2[order(activ2$date,activ2$interval),]
head(activ2)
activ2[1154:1441,]
tot2<-aggregate(activ2$steps.x, by=list(activ2$date), FUN=sum)
hist(tot2[,2], main="total number of steps taken each day", breaks=10)
mean(tot2[,2])
median(tot2[,2])
mean(tot[,2])
summary(tot[,2])
summary(tot2[,2])
activ2$wd=weekdays(activ2)
str(activ2)
activ2$date<-as.Date(activ2$date)
str(activ2)
activ2$wd=weekdays(activ2$date)
head(activ2)
str(activ2)
activ2$weekend=0
activ2[weekdays(activ2$date) in ("Saturday","Sunday"),]$weekend=1
activ2[weekdays(activ2$date) %in% ("Saturday","Sunday"),]$weekend=1
activ2[weekdays(activ2$date) %in% c("Saturday","Sunday"),]$weekend=1
table(activ2$weekend)
4608/(4608+12960)
5/7
2/7
activ2$weekend=“weekday”
activ2[weekdays(activ2$date) %in% c("Saturday","Sunday"),]$weekend=“weekend”
table(activ2$weekend)
activ2$weekend<-“weekday”
activ2[weekdays(activ2$date) %in% c("Saturday","Sunday"),]$weekend<-“weekend”
table(activ2$weekend)
activ2$weekend<-c(“weekday”)
activ2$weekend<-'weekday'
activ2[weekdays(activ2$date) %in% c("Saturday","Sunday"),]$weekend<-'weekend'
table(activ2$weekend)
head(activ2)
avg2<-aggregate(steps.x, by=list(interval), FUN=mean, data=activ2[weekend=='weekend',])
plot(avg2, type='l', xlab='intervels',ylab='average steps', main="average number of steps taken")
names(avg)=c("interval","meanstep")
weekenddata=activ2[weekend=='weekend',]
avg2<-aggregate(steps.x, by=list(interval), FUN=mean,data=activ2[activ2$weekend=='weekend',])
weekenddata=activ2[activ2$weekend=='weekend',]
dim(weekenddata)
avg2<-aggregate(steps.x, by=list(interval), FUN=mean,data=weekenddata)
avg2<-aggregate(weekenddata$steps.x, by=list(weekenddata$interval), FUN=mean)
plot(avg2, type='l', xlab='intervels',ylab='average steps', main="average number of steps taken")
weekdaydata=activ2[activ2$weekend=='weekday',]
avg2<-aggregate(weekdaydata$steps.x, by=list(weekdaydata$interval), FUN=mean)
plot(avg2, type='l', xlab='intervels',ylab='average steps', main="weekday")
tot
activ<-complete.cases(activ)
dim(activ)
head(activ)
activ<-read.csv("C:/DS/activity.csv")
dim(activ)
activ<-na.omit(activ)
dim(activ)
17568-15264
activ2<- merge(activ,avg, by="interval", all.x=T)
for (i in 1:dim(activ2)[1]) {
if (is.na(activ2$steps.x[i]))  activ2$steps.x[i]=activ2$steps.y[i]
}
dim(activ2)
str(activ2)
head(activ2)
tail(activ2)
tot2<-aggregate(activ2$steps, by=list(activ2$date), FUN=sum)
hist(tot2[,2], main="histogram of total number of steps taken each day", breaks=10)
mean(tot2[,2])
median(tot2[,2])
library(slidify)
setwd('C:/DS/shiny/Developing-Data-Products-Assignment/lungcancersurvival')
slidify("index.Rmd")
browseURL("index.html")
publish(title = 'lungcancerpred', 'index.html', host = 'rpubs')
publish(title = 'lungcancerpred', 'index.html', host = 'rpubs')
